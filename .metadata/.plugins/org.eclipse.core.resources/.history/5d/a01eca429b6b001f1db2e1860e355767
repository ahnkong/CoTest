package level1;

import java.util.HashMap;
import java.util.Set;

public class 폰켓몬class구현 {
    public static void main(String[] args) {
        // Test case 1
        int[] nums1 = {3, 1, 2, 3};
        PokemonPick select1 = new PokemonPick(nums1);
        System.out.println(select1.getMaxTypes()); // 결과는 2
        
        // Test case 2
        int[] nums2 = {3, 3, 3, 2, 2, 4};
        PokemonPick select2 = new PokemonPick(nums2);
        System.out.println(select2.getMaxTypes()); // 결과는 3
        
        // Test case 3
        int[] nums3 = {3, 3, 3, 2, 2, 2};
        PokemonPick select3 = new PokemonPick(nums3);
        System.out.println(select3.getMaxTypes()); // 결과는 2
    }
}

//객체 생성
class PokemonPick {
    private int[] nums;
    private int maxTypes;

    //생성자 수정 (인자에서 배열만 가져오는 걸 선택, maxType은 한번 연산이 필요하기 때문에, 인자로 그냥 받아오게 될경우 복잡해짐)
    public PokemonPick(int[] nums) {
        this.nums = nums;
        this.maxTypes = calculateTypes(); // nums배열에서 한번 연산된 후 maxtypes를 결정할 수 있댜
    }
    
	public int[] getNums() {
		return nums;
	}


	public void setNums(int[] nums) {
		this.nums = nums;
        this.maxTypes = calculateTypes(); //case 1 = 2
	}



	public int getMaxTypes() {
		return maxTypes;
	}



	public void setMaxTypes(int maxTypes) {
		this.maxTypes = maxTypes;
	}


	//{3, 1, 2, 3}
	private int calculateTypes() {
        // 가져갈수 잇는 폰켓몬을 가져갈 수 있음
        int pickNum = nums.length / 2;

	    // HashMap을 사용해 폰켓몬 종류별로 등장 횟수를 저장
	    HashMap<Integer, Integer> pokemonCnt = new HashMap<>();
	    for (int temp : nums) {
	    	if(pokemonCnt.containsKey(temp)) {
	    		pokemonCnt.put(temp, pokemonCnt.get(temp)+1);
	    	}else {
	    		pokemonCnt.put(temp, 1);
	    	}
	    }	
        // 고를 수 있는 폰켓몬 종류의 최댓값은
        // 종류의 개수와 N/2 중에서 더 작은 값이 됨
	    int answer = 0;
	    if(pokemonCnt.size() >= nums.length/2) {
	    	answer = nums.length/2;
	    } else {
	    	answer = pokemonCnt.size();
	    }
	    return answer;
	    }
}
